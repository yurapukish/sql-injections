61)  Выведите список комнат, которые были зарезервированы в течение 12 недели 2020 года.
SELECT * FROM Rooms
WHERE Rooms.id IN (SELECT room_id FROM Reservations
WHERE start_date BETWEEN "2020-03-16" AND "2020-03-22" )


62) Вывести в порядке убывания популярности доменные имена 2-го уровня, используемые пользователями для электронной почты. 
Полученный результат необходимо дополнительно отсортировать по возрастанию названий доменных имён.

SELECT SUBSTRING_INDEX(email, "@", -1) AS domain, COUNT(SUBSTRING_INDEX(email, "@", -1)) AS count FROM Users
GROUP BY DOMAIN
ORDER BY count DESC , domain

63) Выведите отсортированный список (по возрастанию) имен студентов в виде Фамилия.И.О.


SELECT CONCAT_WS('.',last_name, SUBSTRING(first_name, 1, 1), SUBSTRING(middle_name, 1, 1), '') as name FROM Student
ORDER BY name ASC 

64) Выведите имена всех пар пассажиров, летевших вместе на одном рейсе два или более раз, и количество таких совместных рейсов. В passengerName1 разместите имя пассажира с наименьшим идентификатором.
SELECT
    x.passenger1_name passengerName1,
    x.passenger2_name passengerName2,
    COUNT(*) count
FROM (
    SELECT
        p1.id passenger1_id,
        p1.name passenger1_name,
        p2.id passenger2_id,
        p2.name passenger2_name
    FROM pass_in_trip pit1
        INNER JOIN passenger p1 ON pit1.passenger = p1.id
        INNER JOIN pass_in_trip pit2 ON pit1.trip = pit2.trip AND pit1.passenger < pit2.passenger
        INNER JOIN passenger p2 ON pit2.passenger = p2.id
    GROUP BY pit1.trip, p1.id, p1.name, p2.id, p2.name
) x
GROUP BY x.passenger1_id, x.passenger1_name, x.passenger2_id, x.passenger2_name
HAVING COUNT(*) > 1
65)Необходимо вывести рейтинг для комнат, 
которые хоть раз арендовали, как среднее значение рейтинга отзывов округленное до целого вниз.
SELECT room_id, FLOOR(AVG(rating)) as rating FROM Rooms r
INNER JOIN Reservations rs ON r.id = rs.room_id
INNER JOIN Reviews ON rs.id = reservation_id
GROUP BY room_id

66) Вывести список комнат со всеми удобствами (наличие ТВ, интернета, кухни и кондиционера), а также общее количество дней и сумму за все дни аренды каждой из таких комнат.

SELECT DISTINCT  home_type,address,coalesce(SUM(DATEDIFF(end_date, start_date)),0) as days, coalesce(SUM(total),0) as total_fee FROM Reservations rs
RIGHT JOIN Rooms r ON rs.room_id = r.id
WHERE has_tv = 1 AND has_internet = 1 AND has_kitchen = 1 AND has_air_con = 1
GROUP BY r.id